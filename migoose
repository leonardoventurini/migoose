#!/usr/bin/env node

const fs = require('fs')
const { resolve } = require('path')
const { program } = require('commander')
const { cosmiconfigSync } = require('cosmiconfig')
const inquirer = require('inquirer')
const { merge } = require('lodash')
const { asyncRun } = require('./utils/async-run')

const explorer = cosmiconfigSync('migoose')

const cfg = explorer.search()

let config = merge(
  {
    dir: resolve(process.cwd(), 'migrations'),
    es6: false,
    typescript: false,
  },
  cfg?.config,
)

if (!fs.existsSync(config.dir)) {
  fs.mkdirSync(config.dir)
}

asyncRun(async () => {
  program
    .name('Migoose CLI')
    .description('Mongoose Migration Toolkit')
    .version('1.0.0')

  program
    .command('create')
    .description('Creates a migration file')
    .action(async () => {
      const prompt = await inquirer.prompt({
        name: 'name',

        type: 'input',
        message: `What is the name of the new migration?`,
      })

      const contents = fs.readFileSync(
        resolve(__dirname, config.es6 ? 'utils/es6.js' : 'utils/es5.js'),
        'utf8',
      )

      const timestamp = Date.now()

      const name = `${timestamp}_${prompt.name}.${
        config.typescript ? 'ts' : 'js'
      }`

      const filename = resolve(config.dir, name)

      fs.writeFileSync(filename, contents)

      console.log(`Migration created!`)
      console.log(filename)
    })

  await program.parseAsync(process.argv)
})
